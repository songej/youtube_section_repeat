name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  pull-requests: write

jobs:
  release-and-merge:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, '-') }}

      - name: Figure out tag location & diff
        id: diff
        shell: bash
        run: |
          set -e
          git fetch origin dev main
          TAG_SHA="${GITHUB_SHA}"

          on_dev=false
          if git branch -r --contains "$TAG_SHA" | grep -q "origin/dev"; then on_dev=true; fi

          ahead=$(git rev-list --left-right --count origin/main...origin/dev | awk '{print $2}')

          echo "on_dev=$on_dev" >> $GITHUB_OUTPUT
          echo "ahead=$ahead" >> $GITHUB_OUTPUT
          echo "Tag on dev: $on_dev, dev ahead of main by $ahead commits"

      - name: Skip merge (no changes or tag not on dev)
        if: steps.diff.outputs.on_dev != 'true' || steps.diff.outputs.ahead == '0'
        run: |
          echo "::notice::Skipping merge: tag_on_dev=${{ steps.diff.outputs.on_dev }}, dev_ahead=${{ steps.diff.outputs.ahead }}"

      - name: Create or reuse PR dev -> main
        if: steps.diff.outputs.on_dev == 'true' && steps.diff.outputs.ahead != '0'
        id: pr
        shell: bash
        run: |
          set +e
          PR_NUMBER=$(gh pr list -H dev -B main --state open --json number -q '.[0].number')
          if [ -z "$PR_NUMBER" ]; then
            gh pr create -H dev -B main \
              -t "Release ${{ github.ref_name }}" \
              -b "Auto PR created on tag ${{ github.ref_name }}"
            PR_NUMBER=$(gh pr list -H dev -B main --state open --json number -q '.[0].number')
          fi
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "PR_NUMBER=$PR_NUMBER"

      - name: Enable auto-merge (merge commit)
        if: steps.pr.outputs.PR_NUMBER != ''
        continue-on-error: true
        run: gh pr merge "${{ steps.pr.outputs.PR_NUMBER }}" --merge --auto

      - name: Summary
        run: |
          echo "Release: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
