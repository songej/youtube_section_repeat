name: Release

on:
  push:
    tags: ['v*']

permissions:
  contents: write
  pull-requests: write

jobs:
  release-and-merge:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, '-') }}

      - name: Check relationship & diff
        id: state
        shell: bash
        run: |
          set -e
          git fetch origin dev main
          BASE=$(git merge-base origin/main origin/dev || true)
          if [ -z "$BASE" ]; then
            echo "related=false" >> $GITHUB_OUTPUT
          else
            echo "related=true" >> $GITHUB_OUTPUT
          fi
          AHEAD=$(git rev-list --left-right --count origin/main...origin/dev | awk '{print $2}')
          echo "ahead=$AHEAD" >> $GITHUB_OUTPUT
          echo "related=$([ -z "$BASE" ] && echo false || echo true), dev ahead by $AHEAD"

      - name: One-time stitch: set main = dev (force-with-lease)
        if: steps.state.outputs.related == 'false' && steps.state.outputs.ahead != '0'
        shell: bash
        run: |
          set -e
          echo "No common history. Forcing main to dev (one-time)."
          git push origin origin/dev:refs/heads/main --force-with-lease

      - name: Create or reuse PR dev -> main
        if: steps.state.outputs.related == 'true' && steps.state.outputs.ahead != '0'
        id: pr
        shell: bash
        env: { GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} }
        run: |
          PR_NUMBER=$(gh pr list -H dev -B main --state open --json number -q '.[0].number')
          if [ -z "$PR_NUMBER" ]; then
            gh pr create -H dev -B main \
              -t "Release ${{ github.ref_name }}" \
              -b "Auto PR created on tag ${{ github.ref_name }}"
            PR_NUMBER=$(gh pr list -H dev -B main --state open --json number -q '.[0].number')
          fi
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "PR: https://github.com/${{ github.repository }}/pull/$PR_NUMBER"

      - name: Enable auto-merge (try allowed types)
        if: steps.pr.outputs.PR_NUMBER != ''
        continue-on-error: true
        shell: bash
        env: { GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} }
        run: |
          set +e
          gh pr merge "${{ steps.pr.outputs.PR_NUMBER }}" --merge  --auto && exit 0
          gh pr merge "${{ steps.pr.outputs.PR_NUMBER }}" --squash --auto && exit 0
          gh pr merge "${{ steps.pr.outputs.PR_NUMBER }}" --rebase --auto && exit 0
          echo "::warning::Auto-merge not scheduled (checks/reviews pending or disallowed)."
